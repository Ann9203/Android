package com.itheima.ui;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.util.AttributeSet;
import android.view.MotionEvent;
import android.view.View;

public class Toggle extends View {

	private Paint paint;
	//设置背景图
	private Bitmap backagroundImageBitmap;
	//设置滑动的图
	private Boolean isTouchMode;
	private Bitmap slideImageBitmap;
	public Toggle(Context context) {
		super(context);
		// TODO Auto-generated constructor stub
		init();
	}

	public Toggle(Context context, AttributeSet attrs) {
		super(context, attrs);
		// TODO Auto-generated constructor stub
		init();
	}

	public Toggle(Context context, AttributeSet attrs, int defStyle) {
		super(context, attrs, defStyle);
		init();
	}
	public void init(){
		paint=new Paint();
	}
	/**
	 * 设置布局宽高
	 */
	@Override
	protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
		setMeasuredDimension(backagroundImageBitmap.getWidth(), backagroundImageBitmap.getHeight());
	}
	
	/**
	 * 绘制布局绘制具体的内容
	 */
	//设置开关的初始状态为false
	private boolean mswitchState=false;
	private float currentX;
	@Override
	public boolean onTouchEvent(MotionEvent event) {
		
		switch(event.getAction()){
			case MotionEvent.ACTION_DOWN:
			currentX = event.getX();
				break;
			case MotionEvent.ACTION_MOVE:
				currentX = event.getX();
				break;
			case MotionEvent.ACTION_UP:
				currentX = event.getX();
				break;
		}
		return true;
	}
	@Override
	protected void onDraw(Canvas canvas) {
		//绘制背景
		canvas.drawBitmap(backagroundImageBitmap, 0, 0, paint);
		//设置新的x
		float newleft=currentX-slideImageBitmap.getWidth()/2.0f;
		//判断这个滑动的幅度是否超出了变价
		if(newleft<=0){
			newleft=0;
		}
		
		//绘制滑块
		//如果触摸了滑块
		if(isTouchMode){
			
		}else{
			//如果状态是false的话，状态就是false的状态
			//如果当前的状态是开着的话
			if(mswitchState){
				int newleft12=backagroundImageBitmap.getWidth()-slideImageBitmap.getWidth();
				canvas.drawBitmap(slideImageBitmap, newleft12, 0, paint);
				
			}else{
				//如果是关的话
				canvas.drawBitmap(slideImageBitmap, 0, 0, paint);
				//根据当前的currentX判断是开还是关
			}
		}
		
		
		
	}
	/**
	 * 设置图片的背景
	 * @param switchBackground
	 */

	public void setBackgroundImage(int switchBackground) {
		backagroundImageBitmap=BitmapFactory.decodeResource(getResources(), switchBackground);
		
	}

	/**
	 * 设置滑动的图片
	 * @param slideButton
	 */
	public void setSlideImage(int slideImage) { 	
		slideImageBitmap=BitmapFactory.decodeResource(getResources(), slideImage);
	}

	/**
	 * 设置状态
	 * @param b
	 */
	public void setState(boolean b) {
		// TODO Auto-generated method stub
		isTouchMode=b;
	}



}
